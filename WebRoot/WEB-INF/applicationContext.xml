<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans	
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.1.xsd	 
	http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.1.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- 配置数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<!-- Connection Info -->
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/mybatis" />
		<property name="username" value="root" />
		<property name="password" value="zz863$senlun" />

		<property name="maxActive" value="100" />
		<property name="maxIdle" value="10" />
		<property name="defaultAutoCommit" value="false" />
		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="600000" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="600000" />
	</bean>

	<bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- Mapper文件 -->
		<property name="mapperLocations"
			value="classpath:com/sealinetech/mybatis2/dao/mapper/*.xml" />
	</bean>

	<!-- 扫描dao包 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.sealinetech.mybatis2.dao" />
		<property name="sqlSessionFactoryBeanName" value="sessionFactory" />
	</bean>
	
	<!-- 扫描service包 -->
	<context:component-scan base-package="com.sealinetech.mybatis2.service" />
	
	<!-- 事务管理器 -->
	<bean id="transationManager"
		class="com.sealinetech.mybatis2.system.MyTransationManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!--  方法一，用注解来管理事务 -->
	<!-- 让Transaction支持注解，这样需要手动加@Transation -->
	<!-- <tx:annotation-driven transaction-manager="transationManager" /> -->
	
	<!-- 方法二，通过增加切面来管理事务 -->
	<!--  定义事务通知（其实就是定义通知属性）    --> 
	<tx:advice id="txAdvice" transaction-manager="transationManager">	 
	  <tx:attributes>	 
	  	<tx:method name="*" propagation="REQUIRED" /> 
	  </tx:attributes>
	</tx:advice>
	
    <!--定义切面（其实是个拦截器） -->
    <aop:config>
        <!-- 对com.sealinetech.mybatis2.service包下的所有类的所有方法都应用事务规则 -->
    	<aop:pointcut id="serviceMethods" expression="execution(* com.sealinetech.mybatis2.service.*.*(..))" /> 
    	<!--  将事务通知和切面组合   --> 
    	<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethods" /> 
    </aop:config>
</beans>